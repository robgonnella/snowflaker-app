{"version":3,"sources":["webpack:///webpack/bootstrap b4a7d34da26ab3d451b9","webpack:///./src/main/main.ts","webpack:///external \"electron\"","webpack:///external \"path\"","webpack:///external \"url\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AC7DA,yCAAqC;AACrC,qCAA6B;AAC7B,oCAA2B;AAC3B,sCAAsC;AACtC,MAAM,GAAG,GAAiB,QAAQ,CAAC,GAAG;AACtC,0CAA0C;AAC1C,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa;AAE5C,8EAA8E;AAC9E,2EAA2E;AAC3E,IAAI,UAA8C,CAAC;AAEnD;IACE,6BAA6B;IAC7B,UAAU,GAAG,IAAI,aAAa,CAAC;QAC7B,KAAK,EAAE,GAAG;QACV,MAAM,EAAE,GAAG;QACX,WAAW,EAAE,IAAI;QACjB,aAAa,EAAE,aAAa;QAC5B,KAAK,EAAE,KAAK;QACZ,QAAQ,EAAE,MAAM;QAChB,cAAc,EAAE,IAAI;KACrB,CAAC,CAAC;IAEH,sCAAsC;IACtC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QAC5B,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,kBAAkB,CAAC;QAClD,QAAQ,EAAE,OAAO;QACjB,OAAO,EAAE,IAAI;KACd,CAAC,CAAC,CAAC;IAEJ,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QACf,UAAU,CAAC,WAAW,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC,CAAC;IACxD,CAAC;IAED,qBAAqB;IACrB,wCAAwC;IAExC,qCAAqC;IACrC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;QACtB,iEAAiE;QACjE,mEAAmE;QACnE,oDAAoD;QACpD,UAAU,GAAG,SAAS,CAAC;IACzB,CAAC,CAAC,CAAC;AACL,CAAC;AAED,wDAAwD;AACxD,yDAAyD;AACzD,sDAAsD;AACtD,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC;AAE7B,oCAAoC;AACpC,GAAG,CAAC,EAAE,CAAC,mBAAmB,EAAE;IAC1B,2DAA2D;IAC3D,8DAA8D;IAC9D,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;QAClC,GAAG,CAAC,IAAI,EAAE;IACZ,CAAC;AACH,CAAC,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,UAAU,EAAE;IACjB,gEAAgE;IAChE,4DAA4D;IAC5D,EAAE,CAAC,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC;QAC7B,YAAY,EAAE;IAChB,CAAC;AACH,CAAC,CAAC,CAAC;AAEH,4EAA4E;AAC5E,uEAAuE;;;;;;;;ACtEvE,qC;;;;;;;ACAA,iC;;;;;;;ACAA,gC","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b4a7d34da26ab3d451b9","import * as Electron from 'electron';\nimport * as path from 'path';\nimport * as url from 'url';\n// Module to control application life.\nconst app: Electron.App = Electron.app\n// Module to create native browser window.\nconst BrowserWindow = Electron.BrowserWindow\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\nlet mainWindow: Electron.BrowserWindow | undefined;\n\nfunction createWindow (): void {\n  // Create the browser window.\n  mainWindow = new BrowserWindow({\n    width: 800,\n    height: 600,\n    transparent: true,\n    titleBarStyle: 'hiddenInset',\n    frame: false,\n    vibrancy: 'dark',\n    useContentSize: true\n  });\n\n  // and load the index.html of the app.\n  mainWindow.loadURL(url.format({\n    pathname: path.join(__dirname, 'main-window.html'),\n    protocol: 'file:',\n    slashes: true\n  }));\n\n  if (mainWindow) {\n    mainWindow.webContents.openDevTools({mode: 'detach'});\n  }\n\n  // Open the DevTools.\n  // mainWindow.webContents.openDevTools()\n\n  // Emitted when the window is closed.\n  mainWindow.on('closed', function () {\n    // Dereference the window object, usually you would store windows\n    // in an array if your app supports multi windows, this is the time\n    // when you should delete the corresponding element.\n    mainWindow = undefined;\n  });\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.on('ready', createWindow)\n\n// Quit when all windows are closed.\napp.on('window-all-closed', function () {\n  // On OS X it is common for applications and their menu bar\n  // to stay active until the user quits explicitly with Cmd + Q\n  if (process.platform !== 'darwin') {\n    app.quit()\n  }\n})\n\napp.on('activate', function () {\n  // On OS X it's common to re-create a window in the app when the\n  // dock icon is clicked and there are no other windows open.\n  if (mainWindow === undefined) {\n    createWindow()\n  }\n});\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and require them here.\n\n\n\n// WEBPACK FOOTER //\n// ./src/main/main.ts","module.exports = require(\"electron\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"electron\"\n// module id = 14\n// module chunks = 1","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 15\n// module chunks = 1","module.exports = require(\"url\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"url\"\n// module id = 16\n// module chunks = 1"],"sourceRoot":""}